

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Oct 20 19:40:30 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221                           
   222                           	psect	idataBANK0
   223  02A3                     __pidataBANK0:
   224                           
   225                           ;initializer for _errorPuerto
   226  02A3  3445               	retlw	69
   227  02A4  346C               	retlw	108
   228  02A5  3420               	retlw	32
   229  02A6  3470               	retlw	112
   230  02A7  3475               	retlw	117
   231  02A8  3465               	retlw	101
   232  02A9  3472               	retlw	114
   233  02AA  3474               	retlw	116
   234  02AB  346F               	retlw	111
   235  02AC  3420               	retlw	32
   236  02AD  3473               	retlw	115
   237  02AE  3465               	retlw	101
   238  02AF  346C               	retlw	108
   239  02B0  3465               	retlw	101
   240  02B1  3463               	retlw	99
   241  02B2  3463               	retlw	99
   242  02B3  3469               	retlw	105
   243  02B4  346F               	retlw	111
   244  02B5  346E               	retlw	110
   245  02B6  3461               	retlw	97
   246  02B7  3464               	retlw	100
   247  02B8  346F               	retlw	111
   248  02B9  3420               	retlw	32
   249  02BA  346E               	retlw	110
   250  02BB  346F               	retlw	111
   251  02BC  3420               	retlw	32
   252  02BD  3465               	retlw	101
   253  02BE  3473               	retlw	115
   254  02BF  3420               	retlw	32
   255  02C0  3476               	retlw	118
   256  02C1  3461               	retlw	97
   257  02C2  346C               	retlw	108
   258  02C3  3469               	retlw	105
   259  02C4  3464               	retlw	100
   260  02C5  346F               	retlw	111
   261  02C6  3400               	retlw	0
   262                           
   263                           	psect	idataBANK1
   264  01B3                     __pidataBANK1:
   265                           
   266                           ;initializer for _pFinal
   267  01B3  3445               	retlw	69
   268  01B4  3473               	retlw	115
   269  01B5  3463               	retlw	99
   270  01B6  3472               	retlw	114
   271  01B7  3469               	retlw	105
   272  01B8  3462               	retlw	98
   273  01B9  3461               	retlw	97
   274  01BA  3420               	retlw	32
   275  01BB  3465               	retlw	101
   276  01BC  346C               	retlw	108
   277  01BD  3420               	retlw	32
   278  01BE  3476               	retlw	118
   279  01BF  3461               	retlw	97
   280  01C0  346C               	retlw	108
   281  01C1  346F               	retlw	111
   282  01C2  3472               	retlw	114
   283  01C3  3420               	retlw	32
   284  01C4  3461               	retlw	97
   285  01C5  3420               	retlw	32
   286  01C6  3469               	retlw	105
   287  01C7  346E               	retlw	110
   288  01C8  3467               	retlw	103
   289  01C9  3472               	retlw	114
   290  01CA  3465               	retlw	101
   291  01CB  3473               	retlw	115
   292  01CC  3461               	retlw	97
   293  01CD  3472               	retlw	114
   294  01CE  3420               	retlw	32
   295  01CF  3465               	retlw	101
   296  01D0  346E               	retlw	110
   297  01D1  3420               	retlw	32
   298  01D2  3465               	retlw	101
   299  01D3  346C               	retlw	108
   300  01D4  3420               	retlw	32
   301  01D5  3470               	retlw	112
   302  01D6  3475               	retlw	117
   303  01D7  3465               	retlw	101
   304  01D8  3472               	retlw	114
   305  01D9  3474               	retlw	116
   306  01DA  346F               	retlw	111
   307  01DB  3420               	retlw	32
   308  01DC  3400               	retlw	0
   309                           
   310                           ;initializer for _pInicial
   311  01DD  3451               	retlw	81
   312  01DE  3475               	retlw	117
   313  01DF  3465               	retlw	101
   314  01E0  3420               	retlw	32
   315  01E1  3470               	retlw	112
   316  01E2  3475               	retlw	117
   317  01E3  3465               	retlw	101
   318  01E4  3472               	retlw	114
   319  01E5  3474               	retlw	116
   320  01E6  346F               	retlw	111
   321  01E7  3420               	retlw	32
   322  01E8  3464               	retlw	100
   323  01E9  3465               	retlw	101
   324  01EA  3473               	retlw	115
   325  01EB  3465               	retlw	101
   326  01EC  3461               	retlw	97
   327  01ED  3420               	retlw	32
   328  01EE  3463               	retlw	99
   329  01EF  3461               	retlw	97
   330  01F0  346D               	retlw	109
   331  01F1  3462               	retlw	98
   332  01F2  3469               	retlw	105
   333  01F3  3461               	retlw	97
   334  01F4  3472               	retlw	114
   335  01F5  343F               	retlw	63
   336  01F6  3420               	retlw	32
   337  01F7  3431               	retlw	49
   338  01F8  342D               	retlw	45
   339  01F9  343E               	retlw	62
   340  01FA  3441               	retlw	65
   341  01FB  342C               	retlw	44
   342  01FC  3420               	retlw	32
   343  01FD  3432               	retlw	50
   344  01FE  342D               	retlw	45
   345  01FF  343E               	retlw	62
   346  0200  3442               	retlw	66
   347  0201  3420               	retlw	32
   348  0202  3400               	retlw	0
   349  000B                     _INTCONbits	set	11
   350  0018                     _RCSTAbits	set	24
   351  0006                     _PORTB	set	6
   352  0005                     _PORTA	set	5
   353  0019                     _TXREG	set	25
   354  001A                     _RCREG	set	26
   355  000C                     _PIR1bits	set	12
   356  0009                     _PORTE	set	9
   357  008C                     _PIE1bits	set	140
   358  0099                     _SPBRG	set	153
   359  009A                     _SPBRGH	set	154
   360  0098                     _TXSTAbits	set	152
   361  008F                     _OSCCONbits	set	143
   362  0086                     _TRISB	set	134
   363  0085                     _TRISA	set	133
   364  0187                     _BAUDCTLbits	set	391
   365  0189                     _ANSELH	set	393
   366  0188                     _ANSEL	set	392
   367                           
   368                           	psect	cinit
   369  0013                     start_initialization:	
   370                           ; #config settings
   371                           
   372  0013                     __initialization:
   373                           
   374                           ; Initialize objects allocated to BANK1
   375  0013  1383               	bcf	3,7	;select IRP bank0
   376  0014  30F0               	movlw	low (__pdataBANK1+80)
   377  0015  00FD               	movwf	btemp+-1
   378  0016  3001               	movlw	high __pidataBANK1
   379  0017  00FE               	movwf	btemp
   380  0018  30B3               	movlw	low __pidataBANK1
   381  0019  00FF               	movwf	btemp+1
   382  001A  30A0               	movlw	low __pdataBANK1
   383  001B  0084               	movwf	4
   384  001C  120A  118A  233F  120A  118A  	fcall	init_ram0
   385                           
   386                           ; Initialize objects allocated to BANK0
   387  0021  3044               	movlw	low (__pdataBANK0+36)
   388  0022  00FD               	movwf	btemp+-1
   389  0023  3002               	movlw	high __pidataBANK0
   390  0024  00FE               	movwf	btemp
   391  0025  30A3               	movlw	low __pidataBANK0
   392  0026  00FF               	movwf	btemp+1
   393  0027  3020               	movlw	low __pdataBANK0
   394  0028  0084               	movwf	4
   395  0029  120A  118A  233F  120A  118A  	fcall	init_ram0
   396                           
   397                           ; Clear objects allocated to BANK0
   398  002E  01D5               	clrf	__pbssBANK0& (0+127)
   399  002F  01D6               	clrf	(__pbssBANK0+1)& (0+127)
   400  0030  01D7               	clrf	(__pbssBANK0+2)& (0+127)
   401  0031  01D8               	clrf	(__pbssBANK0+3)& (0+127)
   402  0032  01D9               	clrf	(__pbssBANK0+4)& (0+127)
   403  0033  01DA               	clrf	(__pbssBANK0+5)& (0+127)
   404                           
   405                           ; Clear objects allocated to COMMON
   406  0034  01FA               	clrf	__pbssCOMMON& (0+127)
   407  0035  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   408  0036  01FC               	clrf	(__pbssCOMMON+2)& (0+127)
   409  0037                     end_of_initialization:	
   410                           ;End of C runtime variable initialization code
   411                           
   412  0037                     __end_of__initialization:
   413  0037  0183               	clrf	3
   414  0038  120A  118A  2958   	ljmp	_main	;jump to C main() function
   415                           
   416                           	psect	bssCOMMON
   417  007A                     __pbssCOMMON:
   418  007A                     _pos_valor:
   419  007A                     	ds	1
   420  007B                     _puerto:
   421  007B                     	ds	1
   422  007C                     _caso:
   423  007C                     	ds	1
   424                           
   425                           	psect	bssBANK0
   426  0055                     __pbssBANK0:
   427  0055                     _valor:
   428  0055                     	ds	3
   429  0058                     _valor_dec:
   430  0058                     	ds	3
   431                           
   432                           	psect	dataBANK0
   433  0020                     __pdataBANK0:
   434  0020                     _errorPuerto:
   435  0020                     	ds	36
   436                           
   437                           	psect	dataBANK1
   438  00A0                     __pdataBANK1:
   439  00A0                     _pFinal:
   440  00A0                     	ds	42
   441  00CA                     _pInicial:
   442  00CA                     	ds	38
   443                           
   444                           	psect	inittext
   445  033B                     init_fetch0:	
   446                           ;	Called with low address in FSR and high address in W
   447                           
   448  033B  087E               	movf	btemp,w
   449  033C  008A               	movwf	10
   450  033D  087F               	movf	btemp+1,w
   451  033E  0082               	movwf	2
   452  033F                     init_ram0:	
   453                           ;Called with:
   454                           ;	high address of idata address in btemp 
   455                           ;	low address of idata address in btemp+1 
   456                           ;	low address of data in FSR
   457                           ;	high address + 1 of data in btemp-1
   458                           
   459  033F  120A  118A  233B  120A  118A  	fcall	init_fetch0
   460  0344  0080               	movwf	0
   461  0345  0A84               	incf	4,f
   462  0346  0804               	movf	4,w
   463  0347  067D               	xorwf	btemp+-1,w
   464  0348  1903               	btfsc	3,2
   465  0349  3400               	retlw	0
   466  034A  0AFF               	incf	btemp+1,f
   467  034B  1903               	btfsc	3,2
   468  034C  0AFE               	incf	btemp,f
   469  034D  2B3F               	goto	init_ram0
   470                           
   471                           	psect	cstackCOMMON
   472  0070                     __pcstackCOMMON:
   473  0070                     ?_traducir:
   474  0070                     ??_traducir:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_sumar_vector:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ??_sumar_vector:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_enviar_string:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_config_io:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_config_reloj:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_baud_config:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_config_int:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_isr:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_main:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?i1_enviar_string:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?i1_strlen:	
   508                           ; 1 bytes @ 0x0
   509                           
   510                           
   511                           ; 2 bytes @ 0x0
   512  0070                     	ds	2
   513  0072                     ??i1_strlen:
   514  0072                     traducir@num:	
   515                           ; 1 bytes @ 0x2
   516                           
   517                           
   518                           ; 1 bytes @ 0x2
   519  0072                     	ds	1
   520  0073                     ?___bmul:
   521  0073                     sumar_vector@resultado:	
   522                           ; 1 bytes @ 0x3
   523                           
   524  0073                     ___bmul@multiplicand:	
   525                           ; 1 bytes @ 0x3
   526                           
   527  0073                     i1strlen@s:	
   528                           ; 1 bytes @ 0x3
   529                           
   530                           
   531                           ; 1 bytes @ 0x3
   532  0073                     	ds	1
   533  0074                     ??___bmul:
   534  0074                     sumar_vector@vect:	
   535                           ; 1 bytes @ 0x4
   536                           
   537  0074                     i1strlen@cp:	
   538                           ; 1 bytes @ 0x4
   539                           
   540                           
   541                           ; 1 bytes @ 0x4
   542  0074                     	ds	1
   543  0075                     ??i1_enviar_string:
   544  0075                     ___bmul@product:	
   545                           ; 1 bytes @ 0x5
   546                           
   547                           
   548                           ; 1 bytes @ 0x5
   549  0075                     	ds	1
   550  0076                     ___bmul@multiplier:
   551                           
   552                           ; 1 bytes @ 0x6
   553  0076                     	ds	1
   554  0077                     i1enviar_string@dato:
   555                           
   556                           ; 1 bytes @ 0x7
   557  0077                     	ds	1
   558  0078                     i1enviar_string@i:
   559                           
   560                           ; 2 bytes @ 0x8
   561  0078                     	ds	2
   562                           
   563                           	psect	cstackBANK0
   564  0044                     __pcstackBANK0:
   565  0044                     ??_isr:
   566                           
   567                           ; 1 bytes @ 0x0
   568  0044                     	ds	5
   569  0049                     ??_config_io:
   570  0049                     ??_config_reloj:	
   571                           ; 1 bytes @ 0x5
   572                           
   573  0049                     ??_baud_config:	
   574                           ; 1 bytes @ 0x5
   575                           
   576  0049                     ??_config_int:	
   577                           ; 1 bytes @ 0x5
   578                           
   579  0049                     ?_strlen:	
   580                           ; 1 bytes @ 0x5
   581                           
   582                           
   583                           ; 2 bytes @ 0x5
   584  0049                     	ds	2
   585  004B                     ??_strlen:
   586                           
   587                           ; 1 bytes @ 0x7
   588  004B                     	ds	1
   589  004C                     strlen@s:
   590                           
   591                           ; 1 bytes @ 0x8
   592  004C                     	ds	1
   593  004D                     strlen@cp:
   594                           
   595                           ; 1 bytes @ 0x9
   596  004D                     	ds	1
   597  004E                     ??_enviar_string:
   598                           
   599                           ; 1 bytes @ 0xA
   600  004E                     	ds	2
   601  0050                     enviar_string@i:
   602                           
   603                           ; 2 bytes @ 0xC
   604  0050                     	ds	2
   605  0052                     enviar_string@dato:
   606                           
   607                           ; 1 bytes @ 0xE
   608  0052                     	ds	1
   609  0053                     ??_main:
   610                           
   611                           ; 1 bytes @ 0xF
   612  0053                     	ds	2
   613                           
   614                           	psect	maintext
   615  0158                     __pmaintext:	
   616 ;;
   617 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   618 ;;
   619 ;; *************** function _main *****************
   620 ;; Defined at:
   621 ;;		line 163 in file "Postlab10.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   630 ;; Tracked objects:
   631 ;;		On entry : B00/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   635 ;;      Params:         0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0
   637 ;;      Temps:          0       2       0       0       0
   638 ;;      Totals:         0       2       0       0       0
   639 ;;Total ram usage:        2 bytes
   640 ;; Hardware stack levels required when called: 5
   641 ;; This function calls:
   642 ;;		_baud_config
   643 ;;		_config_int
   644 ;;		_config_io
   645 ;;		_config_reloj
   646 ;;		_enviar_string
   647 ;; This function is called by:
   648 ;;		Startup code after reset
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function _main
   654  0158                     _main:
   655  0158                     l1384:	
   656                           ;incstack = 0
   657                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   658                           
   659                           
   660                           ;Postlab10.c: 165:     config_io();
   661  0158  120A  118A  234E  120A  118A  	fcall	_config_io
   662                           
   663                           ;Postlab10.c: 166:     config_reloj();
   664  015D  120A  118A  2364  120A  118A  	fcall	_config_reloj
   665  0162                     l1386:
   666                           
   667                           ;Postlab10.c: 167:     baud_config();
   668  0162  120A  118A  22FB  120A  118A  	fcall	_baud_config
   669  0167                     l1388:
   670                           
   671                           ;Postlab10.c: 168:     config_int();
   672  0167  120A  118A  235B  120A  118A  	fcall	_config_int
   673  016C                     l1390:
   674                           
   675                           ;Postlab10.c: 171:     {;Postlab10.c: 172:         _delay((unsigned long)((100)*(1000000
      +                          /4000.0)));
   676  016C  3021               	movlw	33
   677  016D  1283               	bcf	3,5	;RP0=0, select bank0
   678  016E  1303               	bcf	3,6	;RP1=0, select bank0
   679  016F  00D4               	movwf	??_main+1
   680  0170  3075               	movlw	117
   681  0171  00D3               	movwf	??_main
   682  0172                     u317:
   683  0172  0BD3               	decfsz	??_main,f
   684  0173  2972               	goto	u317
   685  0174  0BD4               	decfsz	??_main+1,f
   686  0175  2972               	goto	u317
   687  0176  2977               	nop2
   688                           
   689                           ;Postlab10.c: 174:         switch(caso)
   690  0177  2998               	goto	l1404
   691  0178                     l101:	
   692                           ;Postlab10.c: 175:         {;Postlab10.c: 176:             case 0:
   693                           
   694                           
   695                           ;Postlab10.c: 177:                 if (PIR1bits.TXIF)
   696  0178  1E0C               	btfss	12,4	;volatile
   697  0179  297B               	goto	u291
   698  017A  297C               	goto	u290
   699  017B                     u291:
   700  017B  296C               	goto	l1390
   701  017C                     u290:
   702  017C                     l1392:
   703                           
   704                           ;Postlab10.c: 178:                 {;Postlab10.c: 179:                     enviar_string
      +                          (pInicial);
   705  017C  30CA               	movlw	(low (_pInicial| 0))& (0+255)
   706  017D  120A  118A  2242  120A  118A  	fcall	_enviar_string
   707  0182                     l1394:
   708                           
   709                           ;Postlab10.c: 180:                     caso = 1;
   710  0182  01FC               	clrf	_caso
   711  0183  0AFC               	incf	_caso,f
   712  0184  296C               	goto	l1390
   713  0185                     l105:	
   714                           ;Postlab10.c: 186:             case 2:
   715                           
   716                           
   717                           ;Postlab10.c: 187:                 if (PIR1bits.TXIF)
   718  0185  1E0C               	btfss	12,4	;volatile
   719  0186  2988               	goto	u301
   720  0187  2989               	goto	u300
   721  0188                     u301:
   722  0188  296C               	goto	l1390
   723  0189                     u300:
   724  0189                     l1396:
   725                           
   726                           ;Postlab10.c: 188:                 {;Postlab10.c: 189:                     enviar_string
      +                          (pFinal);
   727  0189  30A0               	movlw	(low (_pFinal| 0))& (0+255)
   728  018A  120A  118A  2242  120A  118A  	fcall	_enviar_string
   729  018F                     l1398:
   730                           
   731                           ;Postlab10.c: 190:                     caso = 3;
   732  018F  3003               	movlw	3
   733  0190  1283               	bcf	3,5	;RP0=0, select bank0
   734  0191  1303               	bcf	3,6	;RP1=0, select bank0
   735  0192  00D3               	movwf	??_main
   736  0193  0853               	movf	??_main,w
   737  0194  00FC               	movwf	_caso
   738  0195  296C               	goto	l1390
   739  0196                     l1400:
   740                           
   741                           ;Postlab10.c: 197:                 caso = 0;
   742  0196  01FC               	clrf	_caso
   743                           
   744                           ;Postlab10.c: 198:                 break;
   745  0197  296C               	goto	l1390
   746  0198                     l1404:
   747  0198  087C               	movf	_caso,w
   748  0199  1283               	bcf	3,5	;RP0=0, select bank0
   749  019A  1303               	bcf	3,6	;RP1=0, select bank0
   750  019B  00D3               	movwf	??_main
   751  019C  01D4               	clrf	??_main+1
   752                           
   753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   754                           ; Switch size 1, requested type "simple"
   755                           ; Number of cases is 1, Range of values is 0 to 0
   756                           ; switch strategies available:
   757                           ; Name         Instructions Cycles
   758                           ; simple_byte            4     3 (average)
   759                           ; direct_byte           11     8 (fixed)
   760                           ; jumptable            260     6 (fixed)
   761                           ;	Chosen strategy is simple_byte
   762  019D  0854               	movf	??_main+1,w
   763  019E  3A00               	xorlw	0	; case 0
   764  019F  1903               	skipnz
   765  01A0  29A2               	goto	l1502
   766  01A1  2996               	goto	l1400
   767  01A2                     l1502:
   768                           
   769                           ; Switch size 1, requested type "simple"
   770                           ; Number of cases is 4, Range of values is 0 to 3
   771                           ; switch strategies available:
   772                           ; Name         Instructions Cycles
   773                           ; simple_byte           13     7 (average)
   774                           ; direct_byte           20     8 (fixed)
   775                           ; jumptable            260     6 (fixed)
   776                           ;	Chosen strategy is simple_byte
   777  01A2  0853               	movf	??_main,w
   778  01A3  3A00               	xorlw	0	; case 0
   779  01A4  1903               	skipnz
   780  01A5  2978               	goto	l101
   781  01A6  3A01               	xorlw	1	; case 1
   782  01A7  1903               	skipnz
   783  01A8  296C               	goto	l1390
   784  01A9  3A03               	xorlw	3	; case 2
   785  01AA  1903               	skipnz
   786  01AB  2985               	goto	l105
   787  01AC  3A01               	xorlw	1	; case 3
   788  01AD  1903               	skipnz
   789  01AE  296C               	goto	l1390
   790  01AF  2996               	goto	l1400
   791  01B0  120A  118A  2810   	ljmp	start
   792  01B3                     __end_of_main:
   793                           
   794                           	psect	text1
   795  0242                     __ptext1:	
   796 ;; *************** function _enviar_string *****************
   797 ;; Defined at:
   798 ;;		line 253 in file "Postlab10.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  dato            1    wreg     PTR unsigned char 
   801 ;;		 -> pFinal(42), pInicial(38), errorPuerto(36), 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  dato            1   14[BANK0 ] PTR unsigned char 
   804 ;;		 -> pFinal(42), pInicial(38), errorPuerto(36), 
   805 ;;  i               2   12[BANK0 ] int 
   806 ;; Return value:  Size  Location     Type
   807 ;;                  1    wreg      void 
   808 ;; Registers used:
   809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   810 ;; Tracked objects:
   811 ;;		On entry : 0/0
   812 ;;		On exit  : 0/0
   813 ;;		Unchanged: 0/0
   814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   815 ;;      Params:         0       0       0       0       0
   816 ;;      Locals:         0       3       0       0       0
   817 ;;      Temps:          0       2       0       0       0
   818 ;;      Totals:         0       5       0       0       0
   819 ;;Total ram usage:        5 bytes
   820 ;; Hardware stack levels used: 1
   821 ;; Hardware stack levels required when called: 4
   822 ;; This function calls:
   823 ;;		_strlen
   824 ;; This function is called by:
   825 ;;		_main
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           
   830                           ;psect for function _enviar_string
   831  0242                     _enviar_string:
   832                           
   833                           ;incstack = 0
   834                           ; Regs used in _enviar_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   835                           ;enviar_string@dato stored from wreg
   836  0242  1283               	bcf	3,5	;RP0=0, select bank0
   837  0243  1303               	bcf	3,6	;RP1=0, select bank0
   838  0244  00D2               	movwf	enviar_string@dato
   839  0245                     l1244:
   840                           
   841                           ;Postlab10.c: 253: void enviar_string(char dato[]);Postlab10.c: 254: {;Postlab10.c: 255:
      +                               for(int i = 0; i<strlen(dato); i++)
   842  0245  01D0               	clrf	enviar_string@i
   843  0246  01D1               	clrf	enviar_string@i+1
   844  0247  2A63               	goto	l1252
   845  0248                     l1246:
   846                           
   847                           ;Postlab10.c: 256:     {;Postlab10.c: 257:         TXREG = dato[i];
   848  0248  0850               	movf	enviar_string@i,w
   849  0249  0752               	addwf	enviar_string@dato,w
   850  024A  00CE               	movwf	??_enviar_string
   851  024B  084E               	movf	??_enviar_string,w
   852  024C  0084               	movwf	4
   853  024D  1383               	bcf	3,7	;select IRP bank0
   854  024E  0800               	movf	0,w
   855  024F  0099               	movwf	25	;volatile
   856  0250                     l1248:
   857                           
   858                           ;Postlab10.c: 258:         _delay((unsigned long)((20)*(1000000/4000.0)));
   859  0250  3007               	movlw	7
   860  0251  1283               	bcf	3,5	;RP0=0, select bank0
   861  0252  1303               	bcf	3,6	;RP1=0, select bank0
   862  0253  00CF               	movwf	??_enviar_string+1
   863  0254  307C               	movlw	124
   864  0255  00CE               	movwf	??_enviar_string
   865  0256                     u327:
   866  0256  0BCE               	decfsz	??_enviar_string,f
   867  0257  2A56               	goto	u327
   868  0258  0BCF               	decfsz	??_enviar_string+1,f
   869  0259  2A56               	goto	u327
   870  025A  0000               	nop
   871  025B                     l1250:
   872                           
   873                           ;Postlab10.c: 259:     }
   874  025B  3001               	movlw	1
   875  025C  1283               	bcf	3,5	;RP0=0, select bank0
   876  025D  1303               	bcf	3,6	;RP1=0, select bank0
   877  025E  07D0               	addwf	enviar_string@i,f
   878  025F  1803               	skipnc
   879  0260  0AD1               	incf	enviar_string@i+1,f
   880  0261  3000               	movlw	0
   881  0262  07D1               	addwf	enviar_string@i+1,f
   882  0263                     l1252:
   883  0263  0852               	movf	enviar_string@dato,w
   884  0264  120A  118A  22C7  120A  118A  	fcall	_strlen
   885  0269  1283               	bcf	3,5	;RP0=0, select bank0
   886  026A  1303               	bcf	3,6	;RP1=0, select bank0
   887  026B  084A               	movf	?_strlen+1,w
   888  026C  0251               	subwf	enviar_string@i+1,w
   889  026D  1D03               	skipz
   890  026E  2A71               	goto	u185
   891  026F  0849               	movf	?_strlen,w
   892  0270  0250               	subwf	enviar_string@i,w
   893  0271                     u185:
   894  0271  1C03               	skipc
   895  0272  2A74               	goto	u181
   896  0273  2A75               	goto	u180
   897  0274                     u181:
   898  0274  2A48               	goto	l1246
   899  0275                     u180:
   900  0275                     l129:
   901  0275  0008               	return
   902  0276                     __end_of_enviar_string:
   903                           
   904                           	psect	text2
   905  02C7                     __ptext2:	
   906 ;; *************** function _strlen *****************
   907 ;; Defined at:
   908 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  s               1    wreg     PTR const unsigned char 
   911 ;;		 -> pFinal(42), pInicial(38), errorPuerto(36), 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  s               1    8[BANK0 ] PTR const unsigned char 
   914 ;;		 -> pFinal(42), pInicial(38), errorPuerto(36), 
   915 ;;  cp              1    9[BANK0 ] PTR const unsigned char 
   916 ;;		 -> pFinal(42), pInicial(38), errorPuerto(36), 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  2    5[BANK0 ] unsigned int 
   919 ;; Registers used:
   920 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       2       0       0       0
   927 ;;      Locals:         0       2       0       0       0
   928 ;;      Temps:          0       1       0       0       0
   929 ;;      Totals:         0       5       0       0       0
   930 ;;Total ram usage:        5 bytes
   931 ;; Hardware stack levels used: 1
   932 ;; Hardware stack levels required when called: 3
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_enviar_string
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           
   940                           
   941                           ;psect for function _strlen
   942  02C7                     _strlen:
   943                           
   944                           ;incstack = 0
   945                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
   946                           ;strlen@s stored from wreg
   947  02C7  1283               	bcf	3,5	;RP0=0, select bank0
   948  02C8  1303               	bcf	3,6	;RP1=0, select bank0
   949  02C9  00CC               	movwf	strlen@s
   950  02CA                     l1142:
   951  02CA  084C               	movf	strlen@s,w
   952  02CB  00CB               	movwf	??_strlen
   953  02CC  084B               	movf	??_strlen,w
   954  02CD  00CD               	movwf	strlen@cp
   955  02CE  2AD3               	goto	l1146
   956  02CF                     l1144:
   957  02CF  3001               	movlw	1
   958  02D0  00CB               	movwf	??_strlen
   959  02D1  084B               	movf	??_strlen,w
   960  02D2  07CD               	addwf	strlen@cp,f
   961  02D3                     l1146:
   962  02D3  084D               	movf	strlen@cp,w
   963  02D4  0084               	movwf	4
   964  02D5  1383               	bcf	3,7	;select IRP bank0
   965  02D6  0800               	movf	0,w
   966  02D7  1D03               	btfss	3,2
   967  02D8  2ADA               	goto	u161
   968  02D9  2ADB               	goto	u160
   969  02DA                     u161:
   970  02DA  2ACF               	goto	l1144
   971  02DB                     u160:
   972  02DB                     l1148:
   973  02DB  084C               	movf	strlen@s,w
   974  02DC  024D               	subwf	strlen@cp,w
   975  02DD  00C9               	movwf	?_strlen
   976  02DE  01CA               	clrf	?_strlen+1
   977  02DF  1BC9               	btfsc	?_strlen,7
   978  02E0  03CA               	decf	?_strlen+1,f
   979  02E1                     l688:
   980  02E1  0008               	return
   981  02E2                     __end_of_strlen:
   982                           
   983                           	psect	text3
   984  0364                     __ptext3:	
   985 ;; *************** function _config_reloj *****************
   986 ;; Defined at:
   987 ;;		line 217 in file "Postlab10.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		None
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         0       0       0       0       0
  1002 ;;      Locals:         0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0
  1004 ;;      Totals:         0       0       0       0       0
  1005 ;;Total ram usage:        0 bytes
  1006 ;; Hardware stack levels used: 1
  1007 ;; Hardware stack levels required when called: 3
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _config_reloj
  1017  0364                     _config_reloj:
  1018  0364                     l1258:	
  1019                           ;incstack = 0
  1020                           ; Regs used in _config_reloj: []
  1021                           
  1022                           
  1023                           ;Postlab10.c: 219:     OSCCONbits.IRCF2 = 1;
  1024  0364  1683               	bsf	3,5	;RP0=1, select bank1
  1025  0365  1303               	bcf	3,6	;RP1=0, select bank1
  1026  0366  170F               	bsf	15,6	;volatile
  1027                           
  1028                           ;Postlab10.c: 220:     OSCCONbits.IRCF1 = 0;
  1029  0367  128F               	bcf	15,5	;volatile
  1030                           
  1031                           ;Postlab10.c: 221:     OSCCONbits.IRCF0 = 0;
  1032  0368  120F               	bcf	15,4	;volatile
  1033                           
  1034                           ;Postlab10.c: 222:     OSCCONbits.SCS = 1;
  1035  0369  140F               	bsf	15,0	;volatile
  1036  036A                     l117:	
  1037                           ;Postlab10.c: 223:     return;
  1038                           
  1039  036A  0008               	return
  1040  036B                     __end_of_config_reloj:
  1041                           
  1042                           	psect	text4
  1043  034E                     __ptext4:	
  1044 ;; *************** function _config_io *****************
  1045 ;; Defined at:
  1046 ;;		line 206 in file "Postlab10.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;		None
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		status,2
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1060 ;;      Params:         0       0       0       0       0
  1061 ;;      Locals:         0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0
  1063 ;;      Totals:         0       0       0       0       0
  1064 ;;Total ram usage:        0 bytes
  1065 ;; Hardware stack levels used: 1
  1066 ;; Hardware stack levels required when called: 3
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _config_io
  1076  034E                     _config_io:
  1077  034E                     l1254:	
  1078                           ;incstack = 0
  1079                           ; Regs used in _config_io: [status,2]
  1080                           
  1081                           
  1082                           ;Postlab10.c: 208:     ANSEL = 0;
  1083  034E  1683               	bsf	3,5	;RP0=1, select bank3
  1084  034F  1703               	bsf	3,6	;RP1=1, select bank3
  1085  0350  0188               	clrf	8	;volatile
  1086                           
  1087                           ;Postlab10.c: 209:     ANSELH = 0;
  1088  0351  0189               	clrf	9	;volatile
  1089                           
  1090                           ;Postlab10.c: 210:     TRISA = 0;
  1091  0352  1683               	bsf	3,5	;RP0=1, select bank1
  1092  0353  1303               	bcf	3,6	;RP1=0, select bank1
  1093  0354  0185               	clrf	5	;volatile
  1094                           
  1095                           ;Postlab10.c: 211:     TRISB = 0;
  1096  0355  0186               	clrf	6	;volatile
  1097                           
  1098                           ;Postlab10.c: 212:     PORTA = 0;
  1099  0356  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0357  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0358  0185               	clrf	5	;volatile
  1102                           
  1103                           ;Postlab10.c: 213:     PORTB = 0;
  1104  0359  0186               	clrf	6	;volatile
  1105  035A                     l114:
  1106  035A  0008               	return
  1107  035B                     __end_of_config_io:
  1108                           
  1109                           	psect	text5
  1110  035B                     __ptext5:	
  1111 ;; *************** function _config_int *****************
  1112 ;; Defined at:
  1113 ;;		line 243 in file "Postlab10.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		None
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         0       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0
  1129 ;;      Temps:          0       0       0       0       0
  1130 ;;      Totals:         0       0       0       0       0
  1131 ;;Total ram usage:        0 bytes
  1132 ;; Hardware stack levels used: 1
  1133 ;; Hardware stack levels required when called: 3
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _config_int
  1143  035B                     _config_int:
  1144  035B                     l1278:	
  1145                           ;incstack = 0
  1146                           ; Regs used in _config_int: []
  1147                           
  1148                           
  1149                           ;Postlab10.c: 245:     INTCONbits.GIE = 1;
  1150  035B  178B               	bsf	11,7	;volatile
  1151                           
  1152                           ;Postlab10.c: 246:     INTCONbits.PEIE = 1;
  1153  035C  170B               	bsf	11,6	;volatile
  1154                           
  1155                           ;Postlab10.c: 247:     PIE1bits.RCIE = 1;
  1156  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1157  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1158  035F  168C               	bsf	12,5	;volatile
  1159                           
  1160                           ;Postlab10.c: 248:     PIR1bits.RCIF = 0;
  1161  0360  1283               	bcf	3,5	;RP0=0, select bank0
  1162  0361  1303               	bcf	3,6	;RP1=0, select bank0
  1163  0362  128C               	bcf	12,5	;volatile
  1164  0363                     l123:	
  1165                           ;Postlab10.c: 249:     return;
  1166                           
  1167  0363  0008               	return
  1168  0364                     __end_of_config_int:
  1169                           
  1170                           	psect	text6
  1171  02FB                     __ptext6:	
  1172 ;; *************** function _baud_config *****************
  1173 ;; Defined at:
  1174 ;;		line 226 in file "Postlab10.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		wreg, status,2
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1188 ;;      Params:         0       0       0       0       0
  1189 ;;      Locals:         0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0
  1191 ;;      Totals:         0       0       0       0       0
  1192 ;;Total ram usage:        0 bytes
  1193 ;; Hardware stack levels used: 1
  1194 ;; Hardware stack levels required when called: 3
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           
  1203                           ;psect for function _baud_config
  1204  02FB                     _baud_config:
  1205  02FB                     l1260:	
  1206                           ;incstack = 0
  1207                           ; Regs used in _baud_config: [wreg+status,2]
  1208                           
  1209                           
  1210                           ;Postlab10.c: 228:     TXSTAbits.SYNC = 0;
  1211  02FB  1683               	bsf	3,5	;RP0=1, select bank1
  1212  02FC  1303               	bcf	3,6	;RP1=0, select bank1
  1213  02FD  1218               	bcf	24,4	;volatile
  1214                           
  1215                           ;Postlab10.c: 229:     TXSTAbits.BRGH = 1;
  1216  02FE  1518               	bsf	24,2	;volatile
  1217                           
  1218                           ;Postlab10.c: 230:     BAUDCTLbits.BRG16 = 1;
  1219  02FF  1683               	bsf	3,5	;RP0=1, select bank3
  1220  0300  1703               	bsf	3,6	;RP1=1, select bank3
  1221  0301  1587               	bsf	7,3	;volatile
  1222  0302                     l1262:
  1223                           
  1224                           ;Postlab10.c: 231:     SPBRGH = 0;
  1225  0302  1683               	bsf	3,5	;RP0=1, select bank1
  1226  0303  1303               	bcf	3,6	;RP1=0, select bank1
  1227  0304  019A               	clrf	26	;volatile
  1228  0305                     l1264:
  1229                           
  1230                           ;Postlab10.c: 232:     SPBRG = 25;
  1231  0305  3019               	movlw	25
  1232  0306  0099               	movwf	25	;volatile
  1233  0307                     l1266:
  1234                           
  1235                           ;Postlab10.c: 234:     RCSTAbits.SPEN = 1;
  1236  0307  1283               	bcf	3,5	;RP0=0, select bank0
  1237  0308  1303               	bcf	3,6	;RP1=0, select bank0
  1238  0309  1798               	bsf	24,7	;volatile
  1239  030A                     l1268:
  1240                           
  1241                           ;Postlab10.c: 235:     RCSTAbits.RX9 = 0;
  1242  030A  1318               	bcf	24,6	;volatile
  1243  030B                     l1270:
  1244                           
  1245                           ;Postlab10.c: 236:     RCSTAbits.CREN = 1;
  1246  030B  1618               	bsf	24,4	;volatile
  1247  030C                     l1272:
  1248                           
  1249                           ;Postlab10.c: 238:     TXSTAbits.TX9 = 0;
  1250  030C  1683               	bsf	3,5	;RP0=1, select bank1
  1251  030D  1303               	bcf	3,6	;RP1=0, select bank1
  1252  030E  1318               	bcf	24,6	;volatile
  1253  030F                     l1274:
  1254                           
  1255                           ;Postlab10.c: 239:     TXSTAbits.TXEN = 1;
  1256  030F  1698               	bsf	24,5	;volatile
  1257  0310                     l120:
  1258  0310  0008               	return
  1259  0311                     __end_of_baud_config:
  1260                           
  1261                           	psect	text7
  1262  003B                     __ptext7:	
  1263 ;; *************** function _isr *****************
  1264 ;; Defined at:
  1265 ;;		line 71 in file "Postlab10.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1279 ;;      Params:         0       0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0
  1281 ;;      Temps:          0       5       0       0       0
  1282 ;;      Totals:         0       5       0       0       0
  1283 ;;Total ram usage:        5 bytes
  1284 ;; Hardware stack levels used: 1
  1285 ;; Hardware stack levels required when called: 2
  1286 ;; This function calls:
  1287 ;;		___bmul
  1288 ;;		_sumar_vector
  1289 ;;		_traducir
  1290 ;;		i1_enviar_string
  1291 ;; This function is called by:
  1292 ;;		Interrupt level 1
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _isr
  1298  003B                     _isr:
  1299  003B                     i1l1304:
  1300                           
  1301                           ;Postlab10.c: 73:     PORTE = 7;
  1302  003B  3007               	movlw	7
  1303  003C  0089               	movwf	9	;volatile
  1304  003D                     i1l1306:
  1305                           
  1306                           ;Postlab10.c: 74:     if(PIR1bits.RCIF)
  1307  003D  1E8C               	btfss	12,5	;volatile
  1308  003E  2840               	goto	u22_21
  1309  003F  2841               	goto	u22_20
  1310  0040                     u22_21:
  1311  0040  294D               	goto	i1l94
  1312  0041                     u22_20:
  1313  0041  2937               	goto	i1l1374
  1314  0042                     i1l1310:
  1315                           
  1316                           ;Postlab10.c: 82:                 PORTE = 2;
  1317  0042  3002               	movlw	2
  1318  0043  0089               	movwf	9	;volatile
  1319                           
  1320                           ;Postlab10.c: 83:                 puerto = RCREG;
  1321  0044  081A               	movf	26,w	;volatile
  1322  0045  00C4               	movwf	??_isr
  1323  0046  0844               	movf	??_isr,w
  1324  0047  00FB               	movwf	_puerto
  1325                           
  1326                           ;Postlab10.c: 84:                 caso = 2;
  1327  0048  3002               	movlw	2
  1328  0049  00C4               	movwf	??_isr
  1329  004A  0844               	movf	??_isr,w
  1330  004B  00FC               	movwf	_caso
  1331  004C                     i1l1312:
  1332                           
  1333                           ;Postlab10.c: 86:                 if (PIR1bits.TXIF)
  1334  004C  1E0C               	btfss	12,4	;volatile
  1335  004D  284F               	goto	u23_21
  1336  004E  2850               	goto	u23_20
  1337  004F                     u23_21:
  1338  004F  294D               	goto	i1l94
  1339  0050                     u23_20:
  1340  0050                     i1l1314:
  1341                           
  1342                           ;Postlab10.c: 87:                 {;Postlab10.c: 88:                     TXREG = 13;
  1343  0050  300D               	movlw	13
  1344  0051  0099               	movwf	25	;volatile
  1345  0052  294D               	goto	i1l94
  1346  0053                     i1l1316:
  1347                           
  1348                           ;Postlab10.c: 98:                         valor[pos_valor] = RCREG;
  1349  0053  081A               	movf	26,w	;volatile
  1350  0054  00C4               	movwf	??_isr
  1351  0055  087A               	movf	_pos_valor,w
  1352  0056  3E55               	addlw	(low (_valor| 0))& (0+255)
  1353  0057  0084               	movwf	4
  1354  0058  0844               	movf	??_isr,w
  1355  0059  1383               	bcf	3,7	;select IRP bank0
  1356  005A  0080               	movwf	0
  1357  005B                     i1l1318:
  1358                           
  1359                           ;Postlab10.c: 99:                         pos_valor = pos_valor + 1;
  1360  005B  087A               	movf	_pos_valor,w
  1361  005C  3E01               	addlw	1
  1362  005D  00C4               	movwf	??_isr
  1363  005E  0844               	movf	??_isr,w
  1364  005F  00FA               	movwf	_pos_valor
  1365  0060                     i1l1320:
  1366                           
  1367                           ;Postlab10.c: 100:                         _delay((unsigned long)((100)*(1000000/4000.0)
      +                          ));
  1368  0060  3021               	movlw	33
  1369  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0063  00C5               	movwf	??_isr+1
  1372  0064  3075               	movlw	117
  1373  0065  00C4               	movwf	??_isr
  1374  0066                     u33_27:
  1375  0066  0BC4               	decfsz	??_isr,f
  1376  0067  2866               	goto	u33_27
  1377  0068  0BC5               	decfsz	??_isr+1,f
  1378  0069  2866               	goto	u33_27
  1379  006A  286B               	nop2
  1380  006B                     i1l1322:
  1381                           
  1382                           ;Postlab10.c: 102:                         if(pos_valor > 2)
  1383  006B  3003               	movlw	3
  1384  006C  027A               	subwf	_pos_valor,w
  1385  006D  1C03               	skipc
  1386  006E  2870               	goto	u24_21
  1387  006F  2871               	goto	u24_20
  1388  0070                     u24_21:
  1389  0070  294D               	goto	i1l94
  1390  0071                     u24_20:
  1391  0071                     i1l1324:
  1392                           
  1393                           ;Postlab10.c: 103:                         {;Postlab10.c: 104:                          
      +                             pos_valor = 0;
  1394  0071  01FA               	clrf	_pos_valor
  1395  0072                     i1l1326:
  1396                           
  1397                           ;Postlab10.c: 106:                             valor_dec[2] = traducir(valor[2]);
  1398  0072  1283               	bcf	3,5	;RP0=0, select bank0
  1399  0073  1303               	bcf	3,6	;RP1=0, select bank0
  1400  0074  0857               	movf	_valor+2,w
  1401  0075  120A  118A  2203  120A  118A  	fcall	_traducir
  1402  007A  1283               	bcf	3,5	;RP0=0, select bank0
  1403  007B  1303               	bcf	3,6	;RP1=0, select bank0
  1404  007C  00C4               	movwf	??_isr
  1405  007D  0844               	movf	??_isr,w
  1406  007E  00DA               	movwf	_valor_dec+2
  1407  007F                     i1l1328:
  1408                           
  1409                           ;Postlab10.c: 107:                             valor_dec[1] = 10*traducir(valor[1]);
  1410  007F  300A               	movlw	10
  1411  0080  00C4               	movwf	??_isr
  1412  0081  0844               	movf	??_isr,w
  1413  0082  00F3               	movwf	___bmul@multiplicand
  1414  0083  0856               	movf	_valor+1,w
  1415  0084  120A  118A  2203  120A  118A  	fcall	_traducir
  1416  0089  120A  118A  2326  120A  118A  	fcall	___bmul
  1417  008E  1283               	bcf	3,5	;RP0=0, select bank0
  1418  008F  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0090  00C5               	movwf	??_isr+1
  1420  0091  0845               	movf	??_isr+1,w
  1421  0092  00D9               	movwf	_valor_dec+1
  1422  0093                     i1l1330:
  1423                           
  1424                           ;Postlab10.c: 108:                             valor_dec[0] = 100*traducir(valor[0]);
  1425  0093  3064               	movlw	100
  1426  0094  00C4               	movwf	??_isr
  1427  0095  0844               	movf	??_isr,w
  1428  0096  00F3               	movwf	___bmul@multiplicand
  1429  0097  0855               	movf	_valor,w
  1430  0098  120A  118A  2203  120A  118A  	fcall	_traducir
  1431  009D  120A  118A  2326  120A  118A  	fcall	___bmul
  1432  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1433  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1434  00A4  00C5               	movwf	??_isr+1
  1435  00A5  0845               	movf	??_isr+1,w
  1436  00A6  00D8               	movwf	_valor_dec
  1437  00A7                     i1l1332:
  1438                           
  1439                           ;Postlab10.c: 110:                             PORTA = sumar_vector(valor_dec);
  1440  00A7  3058               	movlw	(low (_valor_dec| 0))& (0+255)
  1441  00A8  120A  118A  2311  120A  118A  	fcall	_sumar_vector
  1442  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1443  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1444  00AF  0085               	movwf	5	;volatile
  1445                           
  1446                           ;Postlab10.c: 112:                             caso = 0;
  1447  00B0  01FC               	clrf	_caso
  1448  00B1                     i1l1334:
  1449                           
  1450                           ;Postlab10.c: 114:                             if (PIR1bits.TXIF)
  1451  00B1  1E0C               	btfss	12,4	;volatile
  1452  00B2  28B4               	goto	u25_21
  1453  00B3  28B5               	goto	u25_20
  1454  00B4                     u25_21:
  1455  00B4  294D               	goto	i1l94
  1456  00B5                     u25_20:
  1457  00B5  2850               	goto	i1l1314
  1458  00B6                     i1l1338:
  1459                           
  1460                           ;Postlab10.c: 121:                         valor[pos_valor] = RCREG;
  1461  00B6  081A               	movf	26,w	;volatile
  1462  00B7  00C4               	movwf	??_isr
  1463  00B8  087A               	movf	_pos_valor,w
  1464  00B9  3E55               	addlw	(low (_valor| 0))& (0+255)
  1465  00BA  0084               	movwf	4
  1466  00BB  0844               	movf	??_isr,w
  1467  00BC  1383               	bcf	3,7	;select IRP bank0
  1468  00BD  0080               	movwf	0
  1469  00BE                     i1l1340:
  1470                           
  1471                           ;Postlab10.c: 122:                         pos_valor = pos_valor + 1;
  1472  00BE  087A               	movf	_pos_valor,w
  1473  00BF  3E01               	addlw	1
  1474  00C0  00C4               	movwf	??_isr
  1475  00C1  0844               	movf	??_isr,w
  1476  00C2  00FA               	movwf	_pos_valor
  1477  00C3                     i1l1342:
  1478                           
  1479                           ;Postlab10.c: 123:                         _delay((unsigned long)((100)*(1000000/4000.0)
      +                          ));
  1480  00C3  3021               	movlw	33
  1481  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  1482  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  1483  00C6  00C5               	movwf	??_isr+1
  1484  00C7  3075               	movlw	117
  1485  00C8  00C4               	movwf	??_isr
  1486  00C9                     u34_27:
  1487  00C9  0BC4               	decfsz	??_isr,f
  1488  00CA  28C9               	goto	u34_27
  1489  00CB  0BC5               	decfsz	??_isr+1,f
  1490  00CC  28C9               	goto	u34_27
  1491  00CD  28CE               	nop2
  1492  00CE                     i1l1344:
  1493                           
  1494                           ;Postlab10.c: 125:                         if(pos_valor > 2)
  1495  00CE  3003               	movlw	3
  1496  00CF  027A               	subwf	_pos_valor,w
  1497  00D0  1C03               	skipc
  1498  00D1  28D3               	goto	u26_21
  1499  00D2  28D4               	goto	u26_20
  1500  00D3                     u26_21:
  1501  00D3  294D               	goto	i1l78
  1502  00D4                     u26_20:
  1503  00D4                     i1l1346:
  1504                           
  1505                           ;Postlab10.c: 126:                         {;Postlab10.c: 127:                          
      +                             pos_valor = 0;
  1506  00D4  01FA               	clrf	_pos_valor
  1507  00D5                     i1l1348:
  1508                           
  1509                           ;Postlab10.c: 129:                             valor_dec[2] = traducir(valor[2]);
  1510  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  1511  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  1512  00D7  0857               	movf	_valor+2,w
  1513  00D8  120A  118A  2203  120A  118A  	fcall	_traducir
  1514  00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1515  00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1516  00DF  00C4               	movwf	??_isr
  1517  00E0  0844               	movf	??_isr,w
  1518  00E1  00DA               	movwf	_valor_dec+2
  1519  00E2                     i1l1350:
  1520                           
  1521                           ;Postlab10.c: 130:                             valor_dec[1] = 10*traducir(valor[1]);
  1522  00E2  300A               	movlw	10
  1523  00E3  00C4               	movwf	??_isr
  1524  00E4  0844               	movf	??_isr,w
  1525  00E5  00F3               	movwf	___bmul@multiplicand
  1526  00E6  0856               	movf	_valor+1,w
  1527  00E7  120A  118A  2203  120A  118A  	fcall	_traducir
  1528  00EC  120A  118A  2326  120A  118A  	fcall	___bmul
  1529  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1530  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1531  00F3  00C5               	movwf	??_isr+1
  1532  00F4  0845               	movf	??_isr+1,w
  1533  00F5  00D9               	movwf	_valor_dec+1
  1534  00F6                     i1l1352:
  1535                           
  1536                           ;Postlab10.c: 131:                             valor_dec[0] = 100*traducir(valor[0]);
  1537  00F6  3064               	movlw	100
  1538  00F7  00C4               	movwf	??_isr
  1539  00F8  0844               	movf	??_isr,w
  1540  00F9  00F3               	movwf	___bmul@multiplicand
  1541  00FA  0855               	movf	_valor,w
  1542  00FB  120A  118A  2203  120A  118A  	fcall	_traducir
  1543  0100  120A  118A  2326  120A  118A  	fcall	___bmul
  1544  0105  1283               	bcf	3,5	;RP0=0, select bank0
  1545  0106  1303               	bcf	3,6	;RP1=0, select bank0
  1546  0107  00C5               	movwf	??_isr+1
  1547  0108  0845               	movf	??_isr+1,w
  1548  0109  00D8               	movwf	_valor_dec
  1549  010A                     i1l1354:
  1550                           
  1551                           ;Postlab10.c: 133:                             PORTB = sumar_vector(valor_dec);
  1552  010A  3058               	movlw	(low (_valor_dec| 0))& (0+255)
  1553  010B  120A  118A  2311  120A  118A  	fcall	_sumar_vector
  1554  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0112  0086               	movwf	6	;volatile
  1557                           
  1558                           ;Postlab10.c: 135:                             caso = 0;
  1559  0113  01FC               	clrf	_caso
  1560  0114                     i1l1356:
  1561                           
  1562                           ;Postlab10.c: 137:                             if (PIR1bits.TXIF)
  1563  0114  1E0C               	btfss	12,4	;volatile
  1564  0115  2917               	goto	u27_21
  1565  0116  2918               	goto	u27_20
  1566  0117                     u27_21:
  1567  0117  294D               	goto	i1l94
  1568  0118                     u27_20:
  1569  0118  2850               	goto	i1l1314
  1570  0119                     i1l1360:
  1571                           
  1572                           ;Postlab10.c: 144:                         caso = 0;
  1573  0119  01FC               	clrf	_caso
  1574  011A                     i1l1362:
  1575                           
  1576                           ;Postlab10.c: 146:                         if (PIR1bits.TXIF)
  1577  011A  1E0C               	btfss	12,4	;volatile
  1578  011B  291D               	goto	u28_21
  1579  011C  291E               	goto	u28_20
  1580  011D                     u28_21:
  1581  011D  294D               	goto	i1l78
  1582  011E                     u28_20:
  1583  011E                     i1l1364:
  1584                           
  1585                           ;Postlab10.c: 147:                             {;Postlab10.c: 148:                      
      +                                     enviar_string(errorPuerto);
  1586  011E  3020               	movlw	(low (_errorPuerto| 0))& (0+255)
  1587  011F  120A  118A  2276  120A  118A  	fcall	i1_enviar_string
  1588  0124  294D               	goto	i1l94
  1589  0125                     i1l1368:
  1590  0125  087B               	movf	_puerto,w
  1591  0126  00C4               	movwf	??_isr
  1592  0127  01C5               	clrf	??_isr+1
  1593                           
  1594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1595                           ; Switch size 1, requested type "simple"
  1596                           ; Number of cases is 1, Range of values is 0 to 0
  1597                           ; switch strategies available:
  1598                           ; Name         Instructions Cycles
  1599                           ; simple_byte            4     3 (average)
  1600                           ; direct_byte           11     8 (fixed)
  1601                           ; jumptable            260     6 (fixed)
  1602                           ;	Chosen strategy is simple_byte
  1603  0128  0845               	movf	??_isr+1,w
  1604  0129  3A00               	xorlw	0	; case 0
  1605  012A  1903               	skipnz
  1606  012B  292D               	goto	i1l1504
  1607  012C  2919               	goto	i1l1360
  1608  012D                     i1l1504:
  1609                           
  1610                           ; Switch size 1, requested type "simple"
  1611                           ; Number of cases is 2, Range of values is 49 to 50
  1612                           ; switch strategies available:
  1613                           ; Name         Instructions Cycles
  1614                           ; simple_byte            7     4 (average)
  1615                           ; direct_byte           17    11 (fixed)
  1616                           ; jumptable            263     9 (fixed)
  1617                           ;	Chosen strategy is simple_byte
  1618  012D  0844               	movf	??_isr,w
  1619  012E  3A31               	xorlw	49	; case 49
  1620  012F  1903               	skipnz
  1621  0130  2853               	goto	i1l1316
  1622  0131  3A03               	xorlw	3	; case 50
  1623  0132  1903               	skipnz
  1624  0133  28B6               	goto	i1l1338
  1625  0134  2919               	goto	i1l1360
  1626  0135                     i1l1370:
  1627                           
  1628                           ;Postlab10.c: 154:                 caso = 0;
  1629  0135  01FC               	clrf	_caso
  1630                           
  1631                           ;Postlab10.c: 155:                 break;
  1632  0136  294D               	goto	i1l94
  1633  0137                     i1l1374:
  1634  0137  087C               	movf	_caso,w
  1635  0138  00C4               	movwf	??_isr
  1636  0139  01C5               	clrf	??_isr+1
  1637                           
  1638                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1639                           ; Switch size 1, requested type "simple"
  1640                           ; Number of cases is 1, Range of values is 0 to 0
  1641                           ; switch strategies available:
  1642                           ; Name         Instructions Cycles
  1643                           ; simple_byte            4     3 (average)
  1644                           ; direct_byte           11     8 (fixed)
  1645                           ; jumptable            260     6 (fixed)
  1646                           ;	Chosen strategy is simple_byte
  1647  013A  0845               	movf	??_isr+1,w
  1648  013B  3A00               	xorlw	0	; case 0
  1649  013C  1903               	skipnz
  1650  013D  293F               	goto	i1l1506
  1651  013E  2935               	goto	i1l1370
  1652  013F                     i1l1506:
  1653                           
  1654                           ; Switch size 1, requested type "simple"
  1655                           ; Number of cases is 4, Range of values is 0 to 3
  1656                           ; switch strategies available:
  1657                           ; Name         Instructions Cycles
  1658                           ; simple_byte           13     7 (average)
  1659                           ; direct_byte           20     8 (fixed)
  1660                           ; jumptable            260     6 (fixed)
  1661                           ;	Chosen strategy is simple_byte
  1662  013F  0844               	movf	??_isr,w
  1663  0140  3A00               	xorlw	0	; case 0
  1664  0141  1903               	skipnz
  1665  0142  294D               	goto	i1l94
  1666  0143  3A01               	xorlw	1	; case 1
  1667  0144  1903               	skipnz
  1668  0145  2842               	goto	i1l1310
  1669  0146  3A03               	xorlw	3	; case 2
  1670  0147  1903               	skipnz
  1671  0148  294D               	goto	i1l94
  1672  0149  3A01               	xorlw	1	; case 3
  1673  014A  1903               	skipnz
  1674  014B  2925               	goto	i1l1368
  1675  014C  2935               	goto	i1l1370
  1676  014D                     i1l78:
  1677  014D                     i1l94:
  1678  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1679  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1680  014F  0848               	movf	??_isr+4,w
  1681  0150  008A               	movwf	10
  1682  0151  0847               	movf	??_isr+3,w
  1683  0152  0084               	movwf	4
  1684  0153  0E46               	swapf	??_isr+2,w
  1685  0154  0083               	movwf	3
  1686  0155  0EFE               	swapf	btemp,f
  1687  0156  0E7E               	swapf	btemp,w
  1688  0157  0009               	retfie
  1689  0158                     __end_of_isr:
  1690                           
  1691                           	psect	intentry
  1692  0004                     __pintentry:	
  1693                           ;incstack = 0
  1694                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1695                           
  1696  0004                     interrupt_function:
  1697  007E                     saved_w	set	btemp
  1698  0004  00FE               	movwf	btemp
  1699  0005  0E03               	swapf	3,w
  1700  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0008  00C6               	movwf	??_isr+2
  1703  0009  0804               	movf	4,w
  1704  000A  00C7               	movwf	??_isr+3
  1705  000B  080A               	movf	10,w
  1706  000C  00C8               	movwf	??_isr+4
  1707  000D  120A  118A  283B   	ljmp	_isr
  1708                           
  1709                           	psect	text8
  1710  0276                     __ptext8:	
  1711 ;; *************** function i1_enviar_string *****************
  1712 ;; Defined at:
  1713 ;;		line 253 in file "Postlab10.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;  dato            1    wreg     PTR unsigned char 
  1716 ;;		 -> pFinal(42), pInicial(38), errorPuerto(36), 
  1717 ;; Auto vars:     Size  Location     Type
  1718 ;;  dato            1    7[COMMON] PTR unsigned char 
  1719 ;;		 -> pFinal(42), pInicial(38), errorPuerto(36), 
  1720 ;;  i               2    8[COMMON] int 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         0       0       0       0       0
  1731 ;;      Locals:         3       0       0       0       0
  1732 ;;      Temps:          2       0       0       0       0
  1733 ;;      Totals:         5       0       0       0       0
  1734 ;;Total ram usage:        5 bytes
  1735 ;; Hardware stack levels used: 1
  1736 ;; Hardware stack levels required when called: 1
  1737 ;; This function calls:
  1738 ;;		i1_strlen
  1739 ;; This function is called by:
  1740 ;;		_isr
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           
  1745                           ;psect for function i1_enviar_string
  1746  0276                     i1_enviar_string:
  1747                           
  1748                           ;incstack = 0
  1749                           ; Regs used in i1_enviar_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1750                           ;i1enviar_string@dato stored from wreg
  1751  0276  00F7               	movwf	i1enviar_string@dato
  1752  0277                     i1l1294:
  1753                           
  1754                           ;Postlab10.c: 253: void enviar_string(char dato[]);Postlab10.c: 254: {;Postlab10.c: 255:
      +                               for(int i = 0; i<strlen(dato); i++)
  1755  0277  01F8               	clrf	i1enviar_string@i
  1756  0278  01F9               	clrf	i1enviar_string@i+1
  1757  0279  2A92               	goto	i1l1302
  1758  027A                     i1l1296:
  1759                           
  1760                           ;Postlab10.c: 256:     {;Postlab10.c: 257:         TXREG = dato[i];
  1761  027A  0878               	movf	i1enviar_string@i,w
  1762  027B  0777               	addwf	i1enviar_string@dato,w
  1763  027C  00F5               	movwf	??i1_enviar_string
  1764  027D  0875               	movf	??i1_enviar_string,w
  1765  027E  0084               	movwf	4
  1766  027F  1383               	bcf	3,7	;select IRP bank0
  1767  0280  0800               	movf	0,w
  1768  0281  1283               	bcf	3,5	;RP0=0, select bank0
  1769  0282  1303               	bcf	3,6	;RP1=0, select bank0
  1770  0283  0099               	movwf	25	;volatile
  1771  0284                     i1l1298:
  1772                           
  1773                           ;Postlab10.c: 258:         _delay((unsigned long)((20)*(1000000/4000.0)));
  1774  0284  3007               	movlw	7
  1775  0285  00F6               	movwf	??i1_enviar_string+1
  1776  0286  307D               	movlw	125
  1777  0287  00F5               	movwf	??i1_enviar_string
  1778  0288                     u35_27:
  1779  0288  0BF5               	decfsz	??i1_enviar_string,f
  1780  0289  2A88               	goto	u35_27
  1781  028A  0BF6               	decfsz	??i1_enviar_string+1,f
  1782  028B  2A88               	goto	u35_27
  1783  028C                     i1l1300:
  1784                           
  1785                           ;Postlab10.c: 259:     }
  1786  028C  3001               	movlw	1
  1787  028D  07F8               	addwf	i1enviar_string@i,f
  1788  028E  1803               	skipnc
  1789  028F  0AF9               	incf	i1enviar_string@i+1,f
  1790  0290  3000               	movlw	0
  1791  0291  07F9               	addwf	i1enviar_string@i+1,f
  1792  0292                     i1l1302:
  1793  0292  0877               	movf	i1enviar_string@dato,w
  1794  0293  120A  118A  22E2  120A  118A  	fcall	i1_strlen
  1795  0298  0871               	movf	?i1_strlen+1,w
  1796  0299  0279               	subwf	i1enviar_string@i+1,w
  1797  029A  1D03               	skipz
  1798  029B  2A9E               	goto	u21_25
  1799  029C  0870               	movf	?i1_strlen,w
  1800  029D  0278               	subwf	i1enviar_string@i,w
  1801  029E                     u21_25:
  1802  029E  1C03               	skipc
  1803  029F  2AA1               	goto	u21_21
  1804  02A0  2AA2               	goto	u21_20
  1805  02A1                     u21_21:
  1806  02A1  2A7A               	goto	i1l1296
  1807  02A2                     u21_20:
  1808  02A2                     i1l129:
  1809  02A2  0008               	return
  1810  02A3                     __end_ofi1_enviar_string:
  1811                           
  1812                           	psect	text9
  1813  02E2                     __ptext9:	
  1814 ;; *************** function i1_strlen *****************
  1815 ;; Defined at:
  1816 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  s               1    wreg     PTR const unsigned char 
  1819 ;;		 -> pFinal(42), pInicial(38), errorPuerto(36), 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  s               1    3[COMMON] PTR const unsigned char 
  1822 ;;		 -> pFinal(42), pInicial(38), errorPuerto(36), 
  1823 ;;  cp              1    4[COMMON] PTR const unsigned char 
  1824 ;;		 -> pFinal(42), pInicial(38), errorPuerto(36), 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2    0[COMMON] unsigned int 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         2       0       0       0       0
  1835 ;;      Locals:         2       0       0       0       0
  1836 ;;      Temps:          1       0       0       0       0
  1837 ;;      Totals:         5       0       0       0       0
  1838 ;;Total ram usage:        5 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; This function calls:
  1841 ;;		Nothing
  1842 ;; This function is called by:
  1843 ;;		i1_enviar_string
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           
  1848                           ;psect for function i1_strlen
  1849  02E2                     i1_strlen:
  1850                           
  1851                           ;incstack = 0
  1852                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  1853                           ;i1strlen@s stored from wreg
  1854  02E2  00F3               	movwf	i1strlen@s
  1855  02E3                     i1l1152:
  1856  02E3  0873               	movf	i1strlen@s,w
  1857  02E4  00F2               	movwf	??i1_strlen
  1858  02E5  0872               	movf	??i1_strlen,w
  1859  02E6  00F4               	movwf	i1strlen@cp
  1860  02E7  2AEC               	goto	i1l1156
  1861  02E8                     i1l1154:
  1862  02E8  3001               	movlw	1
  1863  02E9  00F2               	movwf	??i1_strlen
  1864  02EA  0872               	movf	??i1_strlen,w
  1865  02EB  07F4               	addwf	i1strlen@cp,f
  1866  02EC                     i1l1156:
  1867  02EC  0874               	movf	i1strlen@cp,w
  1868  02ED  0084               	movwf	4
  1869  02EE  1383               	bcf	3,7	;select IRP bank0
  1870  02EF  0800               	movf	0,w
  1871  02F0  1D03               	btfss	3,2
  1872  02F1  2AF3               	goto	u17_21
  1873  02F2  2AF4               	goto	u17_20
  1874  02F3                     u17_21:
  1875  02F3  2AE8               	goto	i1l1154
  1876  02F4                     u17_20:
  1877  02F4                     i1l1158:
  1878  02F4  0873               	movf	i1strlen@s,w
  1879  02F5  0274               	subwf	i1strlen@cp,w
  1880  02F6  00F0               	movwf	?i1_strlen
  1881  02F7  01F1               	clrf	?i1_strlen+1
  1882  02F8  1BF0               	btfsc	?i1_strlen,7
  1883  02F9  03F1               	decf	?i1_strlen+1,f
  1884  02FA                     i1l688:
  1885  02FA  0008               	return
  1886  02FB                     __end_ofi1_strlen:
  1887                           
  1888                           	psect	text10
  1889  0203                     __ptext10:	
  1890 ;; *************** function _traducir *****************
  1891 ;; Defined at:
  1892 ;;		line 263 in file "Postlab10.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  num             1    wreg     unsigned char 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  num             1    2[COMMON] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      unsigned char 
  1899 ;; Registers used:
  1900 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1906 ;;      Params:         0       0       0       0       0
  1907 ;;      Locals:         1       0       0       0       0
  1908 ;;      Temps:          2       0       0       0       0
  1909 ;;      Totals:         3       0       0       0       0
  1910 ;;Total ram usage:        3 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; This function calls:
  1913 ;;		Nothing
  1914 ;; This function is called by:
  1915 ;;		_isr
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _traducir
  1921  0203                     _traducir:
  1922                           
  1923                           ;incstack = 0
  1924                           ; Regs used in _traducir: [wreg-fsr0h+status,2+status,0]
  1925                           ;traducir@num stored from wreg
  1926  0203  00F2               	movwf	traducir@num
  1927  0204                     i1l1162:
  1928                           
  1929                           ;Postlab10.c: 263: uint8_t traducir(uint8_t num);Postlab10.c: 264: {;Postlab10.c: 265:  
      +                             switch(num)
  1930  0204  2A19               	goto	i1l1232
  1931  0205                     i1l1164:
  1932                           
  1933                           ;Postlab10.c: 268:             return 0;
  1934  0205  3000               	movlw	0
  1935  0206  2A41               	goto	i1l134
  1936  0207                     i1l1170:
  1937                           
  1938                           ;Postlab10.c: 271:             return 1;
  1939  0207  3001               	movlw	1
  1940  0208  2A41               	goto	i1l134
  1941  0209                     i1l1176:
  1942                           
  1943                           ;Postlab10.c: 274:             return 2;
  1944  0209  3002               	movlw	2
  1945  020A  2A41               	goto	i1l134
  1946  020B                     i1l1182:
  1947                           
  1948                           ;Postlab10.c: 277:             return 3;
  1949  020B  3003               	movlw	3
  1950  020C  2A41               	goto	i1l134
  1951  020D                     i1l1188:
  1952                           
  1953                           ;Postlab10.c: 280:             return 4;
  1954  020D  3004               	movlw	4
  1955  020E  2A41               	goto	i1l134
  1956  020F                     i1l1194:
  1957                           
  1958                           ;Postlab10.c: 283:             return 5;
  1959  020F  3005               	movlw	5
  1960  0210  2A41               	goto	i1l134
  1961  0211                     i1l1200:
  1962                           
  1963                           ;Postlab10.c: 286:             return 6;
  1964  0211  3006               	movlw	6
  1965  0212  2A41               	goto	i1l134
  1966  0213                     i1l1206:
  1967                           
  1968                           ;Postlab10.c: 289:             return 7;
  1969  0213  3007               	movlw	7
  1970  0214  2A41               	goto	i1l134
  1971  0215                     i1l1212:
  1972                           
  1973                           ;Postlab10.c: 292:             return 8;
  1974  0215  3008               	movlw	8
  1975  0216  2A41               	goto	i1l134
  1976  0217                     i1l1218:
  1977                           
  1978                           ;Postlab10.c: 295:             return 9;
  1979  0217  3009               	movlw	9
  1980  0218  2A41               	goto	i1l134
  1981  0219                     i1l1232:
  1982  0219  0872               	movf	traducir@num,w
  1983  021A  00F0               	movwf	??_traducir
  1984  021B  01F1               	clrf	??_traducir+1
  1985                           
  1986                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1987                           ; Switch size 1, requested type "simple"
  1988                           ; Number of cases is 1, Range of values is 0 to 0
  1989                           ; switch strategies available:
  1990                           ; Name         Instructions Cycles
  1991                           ; simple_byte            4     3 (average)
  1992                           ; direct_byte           11     8 (fixed)
  1993                           ; jumptable            260     6 (fixed)
  1994                           ;	Chosen strategy is simple_byte
  1995  021C  0871               	movf	??_traducir+1,w
  1996  021D  3A00               	xorlw	0	; case 0
  1997  021E  1903               	skipnz
  1998  021F  2A21               	goto	i1l1508
  1999  0220  2A05               	goto	i1l1164
  2000  0221                     i1l1508:
  2001                           
  2002                           ; Switch size 1, requested type "simple"
  2003                           ; Number of cases is 10, Range of values is 48 to 57
  2004                           ; switch strategies available:
  2005                           ; Name         Instructions Cycles
  2006                           ; simple_byte           31    16 (average)
  2007                           ; direct_byte           41    11 (fixed)
  2008                           ; jumptable            263     9 (fixed)
  2009                           ;	Chosen strategy is simple_byte
  2010  0221  0870               	movf	??_traducir,w
  2011  0222  3A30               	xorlw	48	; case 48
  2012  0223  1903               	skipnz
  2013  0224  2A05               	goto	i1l1164
  2014  0225  3A01               	xorlw	1	; case 49
  2015  0226  1903               	skipnz
  2016  0227  2A07               	goto	i1l1170
  2017  0228  3A03               	xorlw	3	; case 50
  2018  0229  1903               	skipnz
  2019  022A  2A09               	goto	i1l1176
  2020  022B  3A01               	xorlw	1	; case 51
  2021  022C  1903               	skipnz
  2022  022D  2A0B               	goto	i1l1182
  2023  022E  3A07               	xorlw	7	; case 52
  2024  022F  1903               	skipnz
  2025  0230  2A0D               	goto	i1l1188
  2026  0231  3A01               	xorlw	1	; case 53
  2027  0232  1903               	skipnz
  2028  0233  2A0F               	goto	i1l1194
  2029  0234  3A03               	xorlw	3	; case 54
  2030  0235  1903               	skipnz
  2031  0236  2A11               	goto	i1l1200
  2032  0237  3A01               	xorlw	1	; case 55
  2033  0238  1903               	skipnz
  2034  0239  2A13               	goto	i1l1206
  2035  023A  3A0F               	xorlw	15	; case 56
  2036  023B  1903               	skipnz
  2037  023C  2A15               	goto	i1l1212
  2038  023D  3A01               	xorlw	1	; case 57
  2039  023E  1903               	skipnz
  2040  023F  2A17               	goto	i1l1218
  2041  0240  2A05               	goto	i1l1164
  2042  0241                     i1l134:
  2043  0241  0008               	return
  2044  0242                     __end_of_traducir:
  2045                           
  2046                           	psect	text11
  2047  0311                     __ptext11:	
  2048 ;; *************** function _sumar_vector *****************
  2049 ;; Defined at:
  2050 ;;		line 303 in file "Postlab10.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  vect            1    wreg     PTR unsigned char 
  2053 ;;		 -> valor_dec(3), 
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;  vect            1    4[COMMON] PTR unsigned char 
  2056 ;;		 -> valor_dec(3), 
  2057 ;;  resultado       1    3[COMMON] unsigned char 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      unsigned char 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       0       0       0       0
  2068 ;;      Locals:         2       0       0       0       0
  2069 ;;      Temps:          3       0       0       0       0
  2070 ;;      Totals:         5       0       0       0       0
  2071 ;;Total ram usage:        5 bytes
  2072 ;; Hardware stack levels used: 1
  2073 ;; This function calls:
  2074 ;;		Nothing
  2075 ;; This function is called by:
  2076 ;;		_isr
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           
  2081                           ;psect for function _sumar_vector
  2082  0311                     _sumar_vector:
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in _sumar_vector: [wreg-fsr0h+status,2+status,0]
  2086                           ;sumar_vector@vect stored from wreg
  2087  0311  00F4               	movwf	sumar_vector@vect
  2088  0312                     i1l1238:
  2089                           
  2090                           ;Postlab10.c: 303: uint8_t sumar_vector(uint8_t vect[3]);Postlab10.c: 304: {;Postlab10.c
      +                          : 305:     uint8_t resultado;;Postlab10.c: 306:     resultado = vect[0] + vect[1] + vect
      +                          [2];
  2091  0312  0A74               	incf	sumar_vector@vect,w
  2092  0313  0084               	movwf	4
  2093  0314  1383               	bcf	3,7	;select IRP bank0
  2094  0315  0800               	movf	0,w
  2095  0316  00F0               	movwf	??_sumar_vector
  2096  0317  0874               	movf	sumar_vector@vect,w
  2097  0318  0084               	movwf	4
  2098  0319  0800               	movf	0,w
  2099  031A  0770               	addwf	??_sumar_vector,w
  2100  031B  00F1               	movwf	??_sumar_vector+1
  2101  031C  0874               	movf	sumar_vector@vect,w
  2102  031D  3E02               	addlw	2
  2103  031E  0084               	movwf	4
  2104  031F  0800               	movf	0,w
  2105  0320  0771               	addwf	??_sumar_vector+1,w
  2106  0321  00F2               	movwf	??_sumar_vector+2
  2107  0322  0872               	movf	??_sumar_vector+2,w
  2108  0323  00F3               	movwf	sumar_vector@resultado
  2109  0324                     i1l1240:
  2110                           
  2111                           ;Postlab10.c: 307:     return resultado;
  2112  0324  0873               	movf	sumar_vector@resultado,w
  2113  0325                     i1l148:
  2114  0325  0008               	return
  2115  0326                     __end_of_sumar_vector:
  2116                           
  2117                           	psect	text12
  2118  0326                     __ptext12:	
  2119 ;; *************** function ___bmul *****************
  2120 ;; Defined at:
  2121 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  multiplier      1    wreg     unsigned char 
  2124 ;;  multiplicand    1    3[COMMON] unsigned char 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  multiplier      1    6[COMMON] unsigned char 
  2127 ;;  product         1    5[COMMON] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      unsigned char 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2137 ;;      Params:         1       0       0       0       0
  2138 ;;      Locals:         2       0       0       0       0
  2139 ;;      Temps:          1       0       0       0       0
  2140 ;;      Totals:         4       0       0       0       0
  2141 ;;Total ram usage:        4 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_isr
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function ___bmul
  2152  0326                     ___bmul:
  2153                           
  2154                           ;incstack = 0
  2155                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2156                           ;___bmul@multiplier stored from wreg
  2157  0326  00F6               	movwf	___bmul@multiplier
  2158  0327                     i1l1280:
  2159  0327  01F5               	clrf	___bmul@product
  2160  0328                     i1l1282:
  2161  0328  1C76               	btfss	___bmul@multiplier,0
  2162  0329  2B2B               	goto	u19_21
  2163  032A  2B2C               	goto	u19_20
  2164  032B                     u19_21:
  2165  032B  2B30               	goto	i1l1286
  2166  032C                     u19_20:
  2167  032C                     i1l1284:
  2168  032C  0873               	movf	___bmul@multiplicand,w
  2169  032D  00F4               	movwf	??___bmul
  2170  032E  0874               	movf	??___bmul,w
  2171  032F  07F5               	addwf	___bmul@product,f
  2172  0330                     i1l1286:
  2173  0330  1003               	clrc
  2174  0331  0DF3               	rlf	___bmul@multiplicand,f
  2175  0332                     i1l1288:
  2176  0332  1003               	clrc
  2177  0333  0CF6               	rrf	___bmul@multiplier,f
  2178  0334  0876               	movf	___bmul@multiplier,w
  2179  0335  1D03               	btfss	3,2
  2180  0336  2B38               	goto	u20_21
  2181  0337  2B39               	goto	u20_20
  2182  0338                     u20_21:
  2183  0338  2B28               	goto	i1l1282
  2184  0339                     u20_20:
  2185  0339                     i1l1290:
  2186  0339  0875               	movf	___bmul@product,w
  2187  033A                     i1l260:
  2188  033A  0008               	return
  2189  033B                     __end_of___bmul:
  2190  007E                     btemp	set	126	;btemp
  2191  007E                     wtemp0	set	126
  2192                           
  2193                           	psect	config
  2194                           
  2195                           ;Config register CONFIG1 @ 0x2007
  2196                           ;	Oscillator Selection bits
  2197                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2198                           ;	Watchdog Timer Enable bit
  2199                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2200                           ;	Power-up Timer Enable bit
  2201                           ;	PWRTE = OFF, PWRT disabled
  2202                           ;	RE3/MCLR pin function select bit
  2203                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2204                           ;	Code Protection bit
  2205                           ;	CP = OFF, Program memory code protection is disabled
  2206                           ;	Data Code Protection bit
  2207                           ;	CPD = OFF, Data memory code protection is disabled
  2208                           ;	Brown Out Reset Selection bits
  2209                           ;	BOREN = OFF, BOR disabled
  2210                           ;	Internal External Switchover bit
  2211                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2212                           ;	Fail-Safe Clock Monitor Enabled bit
  2213                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2214                           ;	Low Voltage Programming Enable bit
  2215                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2216                           ;	In-Circuit Debugger Mode bit
  2217                           ;	DEBUG = 0x1, unprogrammed default
  2218  2007                     	org	8199
  2219  2007  20D4               	dw	8404
  2220                           
  2221                           ;Config register CONFIG2 @ 0x2008
  2222                           ;	Brown-out Reset Selection bit
  2223                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2224                           ;	Flash Program Memory Self Write Enable bits
  2225                           ;	WRT = OFF, Write protection off
  2226  2008                     	org	8200
  2227  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        116
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      13
    BANK0            80     17      59
    BANK1            80      0      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 42
		 -> pFinal(BANK1[42]), pInicial(BANK1[38]), errorPuerto(BANK0[36]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 42
		 -> pFinal(BANK1[42]), pInicial(BANK1[38]), errorPuerto(BANK0[36]), 

    sumar_vector@vect	PTR unsigned char  size(1) Largest target is 3
		 -> valor_dec(BANK0[3]), 

    enviar_string@dato	PTR unsigned char  size(1) Largest target is 42
		 -> pFinal(BANK1[42]), pInicial(BANK1[38]), errorPuerto(BANK0[36]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_enviar_string
    i1_enviar_string->i1_strlen
    ___bmul->_traducir

Critical Paths under _main in BANK0

    _main->_enviar_string
    _enviar_string->_strlen

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     312
                                             15 BANK0      2     2      0
                        _baud_config
                         _config_int
                          _config_io
                       _config_reloj
                      _enviar_string
 ---------------------------------------------------------------------------------
 (1) _enviar_string                                        5     5      0     312
                                             10 BANK0      5     5      0
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               5     3      2     123
                                              5 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _config_reloj                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_io                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _config_int                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _baud_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     753
                                              0 BANK0      5     5      0
                             ___bmul
                       _sumar_vector
                           _traducir
                    i1_enviar_string
 ---------------------------------------------------------------------------------
 (4) i1_enviar_string                                      5     5      0     180
                                              5 COMMON     5     5      0
                           i1_strlen
 ---------------------------------------------------------------------------------
 (5) i1_strlen                                             5     3      2      90
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (4) _traducir                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _sumar_vector                                         5     5      0     155
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     396
                                              3 COMMON     4     3      1
                           _traducir (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _baud_config
   _config_int
   _config_io
   _config_reloj
   _enviar_string
     _strlen

 _isr (ROOT)
   ___bmul
     _traducir (ARG)
   _sumar_vector
   _traducir
   i1_enviar_string
     i1_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     11      3B       5       73.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      98      12        0.0%
ABS                  0      0      98       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Oct 20 19:40:30 2021

                       pc 0002            ___bmul@product 0075                        fsr 0004  
                     l101 0178                       l120 0310                       l105 0185  
                     l114 035A                       l123 0363                       l117 036A  
                     l129 0275                       l688 02E1                       u300 0189  
                     u301 0188                       u160 02DB                       u161 02DA  
                     u180 0275                       u181 0274                       u317 0172  
                     u327 0256                       u185 0271                       u290 017C  
                     u291 017B                       _isr 003B                       fsr0 0004  
                     indf 0000                      l1142 02CA                      l1144 02CF  
                    l1400 0196                      l1146 02D3                      l1250 025B  
                    l1260 02FB                      l1148 02DB                      l1252 0263  
                    l1244 0245                      l1404 0198                      l1270 030B  
                    l1262 0302                      l1254 034E                      l1246 0248  
                    l1502 01A2                      l1272 030C                      l1264 0305  
                    l1248 0250                      l1274 030F                      l1266 0307  
                    l1258 0364                      l1268 030A                      l1278 035B  
                    l1390 016C                      l1392 017C                      l1384 0158  
                    l1394 0182                      l1386 0162                      l1396 0189  
                    l1388 0167                      l1398 018F                      ?_isr 0070  
                    i1l78 014D                      i1l94 014D     __size_of_sumar_vector 0015  
                    _caso 007C                      _main 0158                      btemp 007E  
          ??_config_reloj 0049                      start 0010         ___bmul@multiplier 0076  
                   ??_isr 0044                     ?_main 0070    __size_of_enviar_string 0034  
                   _ANSEL 0188      __size_of_baud_config 0016                     i1l134 0241  
                   i1l129 02A2                     i1l260 033A                     i1l148 0325  
       ??i1_enviar_string 0075                     i1l688 02FA                     _RCREG 001A  
                   u20_20 0339                     u20_21 0338                     u21_20 02A2  
                   u21_21 02A1                     u21_25 029E                     u22_20 0041  
                   u22_21 0040                     u23_20 0050                     u23_21 004F  
                   u24_20 0071                     u24_21 0070                     u17_20 02F4  
                   u25_20 00B5                     u17_21 02F3                     u25_21 00B4  
                   u33_27 0066                     u26_20 00D4                     u26_21 00D3  
                   _SPBRG 0099                     u34_27 00C9                     u19_20 032C  
                   u27_20 0118                     u19_21 032B                     u27_21 0117  
                   _PORTA 0005                     _PORTB 0006                     _PORTE 0009  
                   u35_27 0288                     u28_20 011E                     u28_21 011D  
                   _TRISA 0085                     _TRISB 0086                     _TXREG 0019  
            _sumar_vector 0311                     _valor 0055                     pclath 000A  
                   status 0003                     wtemp0 007E          __end_ofi1_strlen 02FB  
         __initialization 0013              __end_of_main 01B3                    ??_main 0053  
              i1strlen@cp 0074                    _ANSELH 0189                    i1l1200 0211  
                  i1l1212 0215                    i1l1300 028C                    i1l1206 0213  
                  i1l1302 0292                    i1l1310 0042                    i1l1240 0324  
                  i1l1232 0219                    i1l1152 02E3                    i1l1320 0060  
                  i1l1312 004C                    i1l1304 003B                    i1l1218 0217  
                  i1l1170 0207                    i1l1162 0204                    i1l1154 02E8  
                  i1l1330 0093                    i1l1322 006B                    i1l1314 0050  
                  i1l1306 003D                    i1l1164 0205                    i1l1156 02EC  
                  i1l1340 00BE                    i1l1332 00A7                    i1l1324 0071  
                  i1l1316 0053                    i1l1238 0312                    i1l1182 020B  
                  i1l1158 02F4                    i1l1350 00E2                    i1l1342 00C3  
                  i1l1334 00B1                    i1l1326 0072                    i1l1318 005B  
                  i1l1280 0327                    i1l1176 0209                    i1l1504 012D  
                  i1l1360 0119                    i1l1352 00F6                    i1l1344 00CE  
                  i1l1328 007F                    i1l1290 0339                    i1l1282 0328  
                  i1l1194 020F                    i1l1506 013F                    i1l1370 0135  
                  i1l1362 011A                    i1l1354 010A                    i1l1346 00D4  
                  i1l1338 00B6                    i1l1284 032C                    i1l1508 0221  
                  i1l1188 020D                    i1l1364 011E                    i1l1356 0114  
                  i1l1348 00D5                    i1l1286 0330                    i1l1294 0277  
                  i1l1374 0137                    i1l1288 0332                    i1l1296 027A  
                  i1l1368 0125                    i1l1298 0284                    _SPBRGH 009A  
           _enviar_string 0242                    ___bmul 0326                    _pFinal 00A0  
                  _puerto 007B                    _strlen 02C7      __end_of_config_reloj 036B  
                  saved_w 007E          __end_of_traducir 0242            ?_enviar_string 0070  
 __end_of__initialization 0037       ___bmul@multiplicand 0073            __pcstackCOMMON 0070  
            __pidataBANK0 02A3              __pidataBANK1 01B3         enviar_string@dato 0052  
          enviar_string@i 0050          sumar_vector@vect 0074        __size_of_config_io 000D  
               ?i1_strlen 0070                __pbssBANK0 0055                __pmaintext 0158  
         i1_enviar_string 0276                   ?___bmul 0073                __pintentry 0004  
                 ?_strlen 0049                _config_int 035B                ??i1_strlen 0072  
         ??_enviar_string 004E         __end_of_config_io 035B           __size_of___bmul 0015  
               ?_traducir 0070             ??_baud_config 0049     __size_of_config_reloj 0007  
                 __ptext1 0242                   __ptext2 02C7                   __ptext3 0364  
                 __ptext4 034E                   __ptext5 035B                   __ptext6 02FB  
                 __ptext7 003B                   __ptext8 0276                   __ptext9 02E2  
         __size_of_strlen 001B              __size_of_isr 011D      end_of_initialization 0037  
 __end_ofi1_enviar_string 02A3              _config_reloj 0364                 _RCSTAbits 0018  
              ??_traducir 0070                   strlen@s 004C       __end_of_baud_config 0311  
             ?_config_int 0070     sumar_vector@resultado 0073                 _TXSTAbits 0098  
          __end_of___bmul 033B               _BAUDCTLbits 0187            __end_of_strlen 02E2  
             traducir@num 0072       start_initialization 0013               __end_of_isr 0158  
               i1strlen@s 0073         __size_ofi1_strlen 0019          i1enviar_string@i 0078  
        ?i1_enviar_string 0070                  ??___bmul 0074       __size_of_config_int 0009  
              init_fetch0 033B               __pdataBANK0 0020               __pdataBANK1 00A0  
             _baud_config 02FB                  ??_strlen 004B               __pbssCOMMON 007A  
           ?_sumar_vector 0070                 ___latbits 0002             __pcstackBANK0 0044  
     i1enviar_string@dato 0077                 _config_io 034E         __size_of_traducir 003F  
          ??_sumar_vector 0070     __end_of_enviar_string 0276         interrupt_function 0004  
                _PIE1bits 008C                  _PIR1bits 000C                 _valor_dec 0058  
               _pos_valor 007A                ?_config_io 0070              ??_config_int 0049  
                i1_strlen 02E2        __end_of_config_int 0364                  _pInicial 00CA  
             _errorPuerto 0020                  __ptext10 0203                  __ptext11 0311  
                __ptext12 0326             __size_of_main 005B      __end_of_sumar_vector 0326  
                _traducir 0203              ?_baud_config 0070               ??_config_io 0049  
              _INTCONbits 000B                  init_ram0 033F                  intlevel1 0000  
              _OSCCONbits 008F  __size_ofi1_enviar_string 002D                  strlen@cp 004D  
           ?_config_reloj 0070  
